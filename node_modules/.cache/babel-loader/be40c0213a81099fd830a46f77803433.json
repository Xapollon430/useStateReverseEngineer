{"ast":null,"code":"import _slicedToArray from \"/Users/vehbik/Desktop/React/test/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vehbik/Desktop/React/test/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Form from \"./Components/Form\";\n\nconst Test = () => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        count = _useState2[0],\n        setCount = _useState2[1];\n\n  const tick = () => {\n    setCount(count + 1);\n  };\n\n  useEffect(() => {\n    let x = setInterval(tick, 1000);\n    return () => {\n      console.log(\"unmoutn\");\n      clearInterval(x);\n    };\n  }, [count]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, count, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }));\n};\n\nexport default Test;","map":{"version":3,"sources":["/Users/vehbik/Desktop/React/test/src/App.js"],"names":["React","useState","useEffect","Form","Test","count","setCount","tick","x","setInterval","console","log","clearInterval"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA,oBACQH,QAAQ,CAAC,CAAD,CADhB;AAAA;AAAA,QACXI,KADW;AAAA,QACJC,QADI;;AAGlB,QAAMC,IAAI,GAAG,MAAM;AAClBD,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACA,GAFD;;AAIAH,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIM,CAAC,GAAGC,WAAW,CAACF,IAAD,EAAO,IAAP,CAAnB;AACA,WAAO,MAAM;AACZG,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAC,MAAAA,aAAa,CAACJ,CAAD,CAAb;AACA,KAHD;AAIA,GANQ,EAMN,CAACH,KAAD,CANM,CAAT;AAQA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEA,KADF,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADD;AAMA,CArBD;;AAuBA,eAAeD,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Form from \"./Components/Form\";\n\nconst Test = () => {\n\tconst [count, setCount] = useState(0);\n\n\tconst tick = () => {\n\t\tsetCount(count + 1);\n\t};\n\n\tuseEffect(() => {\n\t\tlet x = setInterval(tick, 1000);\n\t\treturn () => {\n\t\t\tconsole.log(\"unmoutn\");\n\t\t\tclearInterval(x);\n\t\t};\n\t}, [count]);\n\n\treturn (\n\t\t<div>\n\t\t\t{count}\n\t\t\t<button></button>\n\t\t</div>\n\t);\n};\n\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}