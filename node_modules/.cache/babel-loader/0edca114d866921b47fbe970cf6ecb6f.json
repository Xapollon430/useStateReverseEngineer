{"ast":null,"code":"import _slicedToArray from \"/Users/vehbik/Desktop/React/test/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vehbik/Desktop/React/test/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\n\nconst Test = () => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        count = _useState2[0],\n        setCount = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loggedIn = _useState4[0],\n        setLogIn = _useState4[1];\n\n  const tick = () => {\n    setCount(count + 1);\n  };\n\n  const increment = () => {\n    setCount(count + 1);\n  };\n\n  useEffect(() => {\n    // setInterval(tick, 1000);\n    console.log(count);\n  }, [loggedIn]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: increment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, count), React.createElement(\"button\", {\n    onClick: () => {\n      setLogIn(!loggedIn);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"login\"));\n};\n\nexport default Test;","map":{"version":3,"sources":["/Users/vehbik/Desktop/React/test/src/App.js"],"names":["React","useState","useEffect","Test","count","setCount","loggedIn","setLogIn","tick","increment","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA,oBACQF,QAAQ,CAAC,CAAD,CADhB;AAAA;AAAA,QACXG,KADW;AAAA,QACJC,QADI;;AAAA,qBAEWJ,QAAQ,CAAC,KAAD,CAFnB;AAAA;AAAA,QAEXK,QAFW;AAAA,QAEDC,QAFC;;AAIlB,QAAMC,IAAI,GAAG,MAAM;AAClBH,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACA,GAFD;;AAIA,QAAMK,SAAS,GAAG,MAAM;AACvBJ,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACA,GAFD;;AAIAF,EAAAA,SAAS,CAAC,MAAM;AACf;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACA,GAHQ,EAGN,CAACE,QAAD,CAHM,CAAT;AAKA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAQ,IAAA,OAAO,EAAEG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BL,KAA7B,CADD,EAEC;AACC,IAAA,OAAO,EAAE,MAAM;AACdG,MAAAA,QAAQ,CAAC,CAACD,QAAF,CAAR;AACA,KAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFD,CADD;AAYA,CA7BD;;AA+BA,eAAeH,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Test = () => {\n\tconst [count, setCount] = useState(0);\n\tconst [loggedIn, setLogIn] = useState(false);\n\n\tconst tick = () => {\n\t\tsetCount(count + 1);\n\t};\n\n\tconst increment = () => {\n\t\tsetCount(count + 1);\n\t};\n\n\tuseEffect(() => {\n\t\t// setInterval(tick, 1000);\n\t\tconsole.log(count);\n\t}, [loggedIn]);\n\n\treturn (\n\t\t<div>\n\t\t\t<button onClick={increment}>{count}</button>\n\t\t\t<button\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsetLogIn(!loggedIn);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tlogin\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}