{"ast":null,"code":"import _slicedToArray from \"/Users/vehbik/Desktop/React/test/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vehbik/Desktop/React/test/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\n\nconst _useList = () => {\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        data = _React$useState2[0],\n        setData = _React$useState2[1];\n\n  return [data, setData];\n};\n\nconst Test = () => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        count = _useState2[0],\n        setCount = _useState2[1];\n\n  const tick = () => {\n    setCount(count + 1);\n  };\n\n  console.dir(tick);\n  useEffect(() => {\n    setInterval(tick, 1000);\n  }, []);\n  return React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, count);\n};\n\nexport default Test;","map":{"version":3,"sources":["/Users/vehbik/Desktop/React/test/src/App.js"],"names":["React","useState","useEffect","_useList","data","setData","Test","count","setCount","tick","console","dir","setInterval"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA,0BACEH,KAAK,CAACC,QAAN,CAAe,CAAf,CADF;AAAA;AAAA,QACfG,IADe;AAAA,QACTC,OADS;;AAGtB,SAAO,CAACD,IAAD,EAAOC,OAAP,CAAP;AACA,CAJD;;AAMA,MAAMC,IAAI,GAAG,MAAM;AAAA,oBACQL,QAAQ,CAAC,CAAD,CADhB;AAAA;AAAA,QACXM,KADW;AAAA,QACJC,QADI;;AAGlB,QAAMC,IAAI,GAAG,MAAM;AAClBD,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACA,GAFD;;AAIAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACfU,IAAAA,WAAW,CAACH,IAAD,EAAO,IAAP,CAAX;AACA,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASF,KAAT,CAAP;AACA,CAdD;;AAgBA,eAAeD,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst _useList = () => {\n\tconst [data, setData] = React.useState(0);\n\n\treturn [data, setData];\n};\n\nconst Test = () => {\n\tconst [count, setCount] = useState(0);\n\n\tconst tick = () => {\n\t\tsetCount(count + 1);\n\t};\n\n\tconsole.dir(tick);\n\n\tuseEffect(() => {\n\t\tsetInterval(tick, 1000);\n\t}, []);\n\n\treturn <button>{count}</button>;\n};\n\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}